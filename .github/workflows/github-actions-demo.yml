name: GitHub Actions Demo
run-name: ${{ github.actor }} is checking system against assessment image
on: [push]

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Pull and run given Docker image
        run: |
          docker pull mrksdh/assessment
          docker run -d -p 8080:8080 --name assessment-container mrksdh/assessment

      - name: Build local Dockerfile and run container
        run: |
          docker build -t my-local-container -f Dockerfile .
          docker run -d --name local-container --link assessment-container my-local-container

      - name: Wait for containers to be ready
        run: sleep 10  # Optional: Wait 10 seconds to ensure containers are ready

      - name: Run Python Script
        run: |
          # Install requests if not in requirements.txt
          pip install requests

          # Create and execute the Python script
          echo 'import requests
import json
import os

url = "http://localhost:8080/v1/dataset"
response = requests.get(url)
responseAsJson = response.json()
data = responseAsJson
print(data)  # Output the response

resultDict = {}
resultDict["result"] = []

# Process data and prepare result (your logic here)
for event in data["events"]:
    # Your processing logic to fill resultDict goes here

# Convert resultDict to JSON and print it
resultAsJson = json.dumps(resultDict)
print(resultAsJson)' > script.py

          python script.py  # Execute the script

      - name: Verify containers are running
        run: |
          docker ps

      - name: Cleanup
        run: |
          docker stop assessment-container local-container
          docker rm assessment-container local-container
st:8080/v1/result -H "Content-Type: application/json" -d "$CONSUMPTION_RESULT")
          echo "Response from POST request: $POST_RESPONSE"


      - name: Verify containers are running
        run: |
          docker ps

      - name: Cleanup
        run: |
          docker stop assessment-container local-container
          docker rm assessment-container local-container
